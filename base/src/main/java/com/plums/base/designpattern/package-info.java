/**
 * 設計模式
 *
 * 一、设计原则
 *
 *  1. 多用组合，少用继承  -- 继承的父类修改时，会影响到所有的子类
 *  2. 针对接口编程、不针对实现编程
 *  3. 为交互对象之间的松耦合设计而努力
 *  4. 类应该对扩展开放，对修改关闭。
 *  5. 依赖抽象、不要依赖具体的类
 *
 * 二、模式
 *  1. 装饰者模式
 *  2. 代理模式
 *  3. 工厂模式
 *      3.1 抽象工厂模式 -- 一组产品 每个产品的生产都是用了工厂方法模式
 *      3.2 工厂方法模式 -- 抽象创建对象的方法 让子类决定创建一个什么类型的对象
 *  4. 观察者模式 -- 解耦 不依赖细节
 *  5. 策略模式 -- 抽象不变化的使用继承 变化的部分使用组合 使其方便扩展
 */
package com.plums.base.designpattern;